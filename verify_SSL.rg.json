{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/Alien-Base-ModuleBuild/lib/Alien/Base/ModuleBuild/Repository/HTTP.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/Alien-Base-ModuleBuild/lib/Alien/Base/ModuleBuild/Repository/HTTP.pm"},"lines":{"text":"    $args{verify_SSL} = 1 if Alien::Base::ModuleBuild->alien_download_rule =~ /encrypt/;\n"},"line_number":46,"absolute_offset":1142,"submatches":[{"match":{"text":"verify_SSL"},"start":10,"end":20}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/Alien-Base-ModuleBuild/lib/Alien/Base/ModuleBuild/Repository/HTTP.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":12277,"human":"0.000012s"},"searches":1,"searches_with_match":1,"bytes_searched":6300,"bytes_printed":515,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/Alien-Build/lib/Alien/Build/Plugin/Fetch/HTTPTiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/Alien-Build/lib/Alien/Build/Plugin/Fetch/HTTPTiny.pm"},"lines":{"text":"      verify_SSL => $build->download_rule =~ /encrypt/ ? 1 : 0,\n"},"line_number":76,"absolute_offset":1811,"submatches":[{"match":{"text":"verify_SSL"},"start":6,"end":16}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/Alien-Build/lib/Alien/Build/Plugin/Fetch/HTTPTiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":9943,"human":"0.000010s"},"searches":1,"searches_with_match":1,"bytes_searched":6352,"bytes_printed":457,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-PAIA/lib/App/PAIA/Agent.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-PAIA/lib/App/PAIA/Agent.pm"},"lines":{"text":"        agent    => HTTP::Tiny->new( verify_SSL => (!$options{insecure}) ),\n"},"line_number":17,"absolute_offset":299,"submatches":[{"match":{"text":"verify_SSL"},"start":37,"end":47}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-PAIA/lib/App/PAIA/Agent.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":113645,"human":"0.000114s"},"searches":1,"searches_with_match":1,"bytes_searched":3300,"bytes_printed":425,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpangitify/lib/App/cpangitify.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpangitify/lib/App/cpangitify.pm"},"lines":{"text":"our $ua  = HTTP::Tiny->new( verify_SSL => 1 );\n"},"line_number":27,"absolute_offset":617,"submatches":[{"match":{"text":"verify_SSL"},"start":28,"end":38}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpangitify/lib/App/cpangitify.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":106617,"human":"0.000107s"},"searches":1,"searches_with_match":1,"bytes_searched":6760,"bytes_printed":408,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"  #pod * C<verify_SSL> —\n"},"line_number":13493,"absolute_offset":409025,"submatches":[{"match":{"text":"verify_SSL"},"start":11,"end":21}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"  #pod See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":13512,"absolute_offset":410117,"submatches":[{"match":{"text":"verify_SSL"},"start":45,"end":55}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"          SSL_options verify_SSL\n"},"line_number":13521,"absolute_offset":410419,"submatches":[{"match":{"text":"verify_SSL"},"start":22,"end":32}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"          verify_SSL   => $args{verify_SSL} || $args{verify_ssl} || 0, # no verification by default\n"},"line_number":13556,"absolute_offset":411362,"submatches":[{"match":{"text":"verify_SSL"},"start":10,"end":20},{"match":{"text":"verify_SSL"},"start":32,"end":42},{"match":{"text":"verify_ssl"},"start":53,"end":63}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"      if ( ref($self) && ( $self->{verify_SSL} || $self->{SSL_options}{SSL_verify_mode} ) ) {\n"},"line_number":13951,"absolute_offset":426910,"submatches":[{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"              verify_SSL  => $self->{verify_SSL},\n"},"line_number":13954,"absolute_offset":427103,"submatches":[{"match":{"text":"verify_SSL"},"start":14,"end":24},{"match":{"text":"verify_SSL"},"start":37,"end":47}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"          verify_SSL      => $self->{verify_SSL},\n"},"line_number":14053,"absolute_offset":430199,"submatches":[{"match":{"text":"verify_SSL"},"start":10,"end":20},{"match":{"text":"verify_SSL"},"start":37,"end":47}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"          verify_SSL       => 0,\n"},"line_number":14396,"absolute_offset":442002,"submatches":[{"match":{"text":"verify_SSL"},"start":10,"end":20}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"      if ($self->{verify_SSL}) {\n"},"line_number":14933,"absolute_offset":459164,"submatches":[{"match":{"text":"verify_SSL"},"start":18,"end":28}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"      # user options override settings from verify_SSL\n"},"line_number":14944,"absolute_offset":459679,"submatches":[{"match":{"text":"verify_SSL"},"start":44,"end":54}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"  C<verify_SSL> — A boolean that indicates whether to validate the SSL certificate of an C<https> — connection (default is false)\n"},"line_number":15059,"absolute_offset":462788,"submatches":[{"match":{"text":"verify_SSL"},"start":4,"end":14}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"  See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":15080,"absolute_offset":463794,"submatches":[{"match":{"text":"verify_SSL"},"start":40,"end":50}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"  verify_SSL\n"},"line_number":15269,"absolute_offset":471390,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"  Setting the C<verify_SSL> attribute to a true value will make HTTP::Tiny verify\n"},"line_number":15309,"absolute_offset":472815,"submatches":[{"match":{"text":"verify_SSL"},"start":16,"end":26}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"lines":{"text":"  An exception will be raised if C<verify_SSL> is true and no CA certificate file\n"},"line_number":15341,"absolute_offset":473970,"submatches":[{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpanminus/lib/App/cpanminus/fatscript.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":1586820,"human":"0.001587s"},"searches":1,"searches_with_match":1,"bytes_searched":766863,"bytes_printed":5158,"matched_lines":15,"matches":19}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpm/lib/App/cpm/HTTP.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpm/lib/App/cpm/HTTP.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":27,"absolute_offset":731,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/A/App-cpm/lib/App/cpm/HTTP.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":88653,"human":"0.000089s"},"searches":1,"searches_with_match":1,"bytes_searched":1015,"bytes_printed":367,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/BZ-Client/eg/nagios2bugzilla/talktobugzilla.pl"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/BZ-Client/eg/nagios2bugzilla/talktobugzilla.pl"},"lines":{"text":"    connect => { verify_SSL => 1 },\n"},"line_number":101,"absolute_offset":2689,"submatches":[{"match":{"text":"verify_SSL"},"start":17,"end":27}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/BZ-Client/eg/nagios2bugzilla/talktobugzilla.pl"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":249687,"human":"0.000250s"},"searches":1,"searches_with_match":1,"bytes_searched":25795,"bytes_printed":419,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/BZ-Client/lib/BZ/Client.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/BZ-Client/lib/BZ/Client.pm"},"lines":{"text":"=item verify_SSL\n"},"line_number":416,"absolute_offset":10335,"submatches":[{"match":{"text":"verify_SSL"},"start":6,"end":16}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/BZ-Client/lib/BZ/Client.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":128630,"human":"0.000129s"},"searches":1,"searches_with_match":1,"bytes_searched":14396,"bytes_printed":360,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-CPI-Gateway-Moip/lib/Business/CPI/Gateway/Moip.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-CPI-Gateway-Moip/lib/Business/CPI/Gateway/Moip.pm"},"lines":{"text":"        my $res = HTTP::Tiny->new( verify_SSL => $self->verify_ssl )->request(\n"},"line_number":286,"absolute_offset":9482,"submatches":[{"match":{"text":"verify_SSL"},"start":35,"end":45},{"match":{"text":"verify_ssl"},"start":56,"end":66}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-CPI-Gateway-Moip/lib/Business/CPI/Gateway/Moip.pm"},"lines":{"text":"    my $res = HTTP::Tiny->new( verify_SSL => 0 )->request(\n"},"line_number":826,"absolute_offset":27082,"submatches":[{"match":{"text":"verify_SSL"},"start":31,"end":41}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-CPI-Gateway-Moip/lib/Business/CPI/Gateway/Moip.pm"},"lines":{"text":"    my $res2 = HTTP::Tiny->new( verify_SSL => 0 )->request(\n"},"line_number":841,"absolute_offset":27582,"submatches":[{"match":{"text":"verify_SSL"},"start":32,"end":42}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-CPI-Gateway-Moip/lib/Business/CPI/Gateway/Moip.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":257425,"human":"0.000257s"},"searches":1,"searches_with_match":1,"bytes_searched":29040,"bytes_printed":1195,"matched_lines":3,"matches":4}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-Giropay/lib/Business/Giropay/Role/Request.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-Giropay/lib/Business/Giropay/Role/Request.pm"},"lines":{"text":"    my $http     = HTTP::Tiny->new( verify_SSL => 1 );\n"},"line_number":122,"absolute_offset":2479,"submatches":[{"match":{"text":"verify_SSL"},"start":36,"end":46}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-Giropay/lib/Business/Giropay/Role/Request.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":44927,"human":"0.000045s"},"searches":1,"searches_with_match":1,"bytes_searched":2965,"bytes_printed":452,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-CardConnect/lib/Business/OnlinePayment/CardConnect.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-CardConnect/lib/Business/OnlinePayment/CardConnect.pm"},"lines":{"text":"        qw( order_number md5 avs_code cvv2_response card_token cavv_response failure_status verify_SSL )\n"},"line_number":194,"absolute_offset":5326,"submatches":[{"match":{"text":"verify_SSL"},"start":92,"end":102}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-CardConnect/lib/Business/OnlinePayment/CardConnect.pm"},"lines":{"text":"    $self->verify_SSL(0);\n"},"line_number":227,"absolute_offset":6215,"submatches":[{"match":{"text":"verify_SSL"},"start":11,"end":21}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-CardConnect/lib/Business/OnlinePayment/CardConnect.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":196638,"human":"0.000197s"},"searches":1,"searches_with_match":1,"bytes_searched":15368,"bytes_printed":861,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-DLocal/lib/Business/OnlinePayment/DLocal.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-DLocal/lib/Business/OnlinePayment/DLocal.pm"},"lines":{"text":"    my $verify_ssl = 1;\n"},"line_number":322,"absolute_offset":11294,"submatches":[{"match":{"text":"verify_ssl"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-DLocal/lib/Business/OnlinePayment/DLocal.pm"},"lines":{"text":"        $response = HTTP::Tiny->new( verify_SSL=>$verify_ssl )->request('POST', $url, {\n"},"line_number":331,"absolute_offset":11699,"submatches":[{"match":{"text":"verify_SSL"},"start":37,"end":47},{"match":{"text":"verify_ssl"},"start":50,"end":60}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-DLocal/lib/Business/OnlinePayment/DLocal.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":245329,"human":"0.000245s"},"searches":1,"searches_with_match":1,"bytes_searched":18030,"bytes_printed":864,"matched_lines":2,"matches":3}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"          verify_SSL phoenixTxnId is_duplicate card_token card_token_response card_token_message\n"},"line_number":102,"absolute_offset":2574,"submatches":[{"match":{"text":"verify_SSL"},"start":10,"end":20}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"        $self->verify_SSL(0);\n"},"line_number":146,"absolute_offset":3891,"submatches":[{"match":{"text":"verify_SSL"},"start":15,"end":25}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"        $self->verify_SSL(0);\n"},"line_number":158,"absolute_offset":4469,"submatches":[{"match":{"text":"verify_SSL"},"start":15,"end":25}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"        $self->verify_SSL(0);\n"},"line_number":169,"absolute_offset":4882,"submatches":[{"match":{"text":"verify_SSL"},"start":15,"end":25}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"        $self->verify_SSL(0);\n"},"line_number":180,"absolute_offset":5308,"submatches":[{"match":{"text":"verify_SSL"},"start":15,"end":25}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"        $self->verify_SSL(1);\n"},"line_number":191,"absolute_offset":5715,"submatches":[{"match":{"text":"verify_SSL"},"start":15,"end":25}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"    my $response = HTTP::Tiny->new( verify_SSL=>$self->verify_SSL )->request($actionRESTful->{$action}, $url, {\n"},"line_number":1108,"absolute_offset":41617,"submatches":[{"match":{"text":"verify_SSL"},"start":36,"end":46},{"match":{"text":"verify_SSL"},"start":55,"end":65}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"    my $response = HTTP::Tiny->new( verify_SSL=>$self->verify_SSL )->request('GET', $url, {\n"},"line_number":1153,"absolute_offset":43603,"submatches":[{"match":{"text":"verify_SSL"},"start":36,"end":46},{"match":{"text":"verify_SSL"},"start":55,"end":65}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"    my $tiny_response = HTTP::Tiny->new( verify_SSL=>$self->verify_SSL )->request('POST', $url, {\n"},"line_number":1754,"absolute_offset":62996,"submatches":[{"match":{"text":"verify_SSL"},"start":41,"end":51},{"match":{"text":"verify_SSL"},"start":60,"end":70}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"lines":{"text":"    my $tiny_response = HTTP::Tiny->new( verify_SSL=>$self->verify_SSL )->request('POST', $url, {\n"},"line_number":1873,"absolute_offset":66913,"submatches":[{"match":{"text":"verify_SSL"},"start":41,"end":51},{"match":{"text":"verify_SSL"},"start":60,"end":70}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Litle/lib/Business/OnlinePayment/Litle.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":417509,"human":"0.000418s"},"searches":1,"searches_with_match":1,"bytes_searched":82042,"bytes_printed":3748,"matched_lines":10,"matches":14}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Vindicia-Select/lib/Business/OnlinePayment/Vindicia/Select.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Vindicia-Select/lib/Business/OnlinePayment/Vindicia/Select.pm"},"lines":{"text":"        qw( order_number md5 avs_code cvv2_response card_token cavv_response failure_status verify_SSL )\n"},"line_number":207,"absolute_offset":5708,"submatches":[{"match":{"text":"verify_SSL"},"start":92,"end":102}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Vindicia-Select/lib/Business/OnlinePayment/Vindicia/Select.pm"},"lines":{"text":"    $self->verify_SSL(0);\n"},"line_number":236,"absolute_offset":6370,"submatches":[{"match":{"text":"verify_SSL"},"start":11,"end":21}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Vindicia-Select/lib/Business/OnlinePayment/Vindicia/Select.pm"},"lines":{"text":"    my $verify_ssl = 1;\n"},"line_number":479,"absolute_offset":14991,"submatches":[{"match":{"text":"verify_ssl"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Vindicia-Select/lib/Business/OnlinePayment/Vindicia/Select.pm"},"lines":{"text":"    my $response = HTTP::Tiny->new( verify_SSL=>$verify_ssl )->request('POST', $url, {\n"},"line_number":480,"absolute_offset":15015,"submatches":[{"match":{"text":"verify_SSL"},"start":36,"end":46},{"match":{"text":"verify_ssl"},"start":49,"end":59}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/B/Business-OnlinePayment-Vindicia-Select/lib/Business/OnlinePayment/Vindicia/Select.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":188235,"human":"0.000188s"},"searches":1,"searches_with_match":1,"bytes_searched":22505,"bytes_printed":1637,"matched_lines":4,"matches":5}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPAN-Perl-Releases-MetaCPAN/lib/CPAN/Perl/Releases/MetaCPAN.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPAN-Perl-Releases-MetaCPAN/lib/CPAN/Perl/Releases/MetaCPAN.pm"},"lines":{"text":"    my $http = HTTP::Tinyish->new(verify_SSL => 1, agent => __PACKAGE__ . \"/$VERSION\");\n"},"line_number":17,"absolute_offset":411,"submatches":[{"match":{"text":"verify_SSL"},"start":34,"end":44}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPAN-Perl-Releases-MetaCPAN/lib/CPAN/Perl/Releases/MetaCPAN.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":123603,"human":"0.000124s"},"searches":1,"searches_with_match":1,"bytes_searched":4589,"bytes_printed":503,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPAN-Upload-Tiny/lib/CPAN/Upload/Tiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPAN-Upload-Tiny/lib/CPAN/Upload/Tiny.pm"},"lines":{"text":"\tmy $tiny = HTTP::Tiny->new(verify_SSL => 1);\n"},"line_number":59,"absolute_offset":1305,"submatches":[{"match":{"text":"verify_SSL"},"start":28,"end":38}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPAN-Upload-Tiny/lib/CPAN/Upload/Tiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":100440,"human":"0.000100s"},"searches":1,"searches_with_match":1,"bytes_searched":4288,"bytes_printed":417,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"#pod * C<verify_SSL> — A boolean that indicates whether to validate the SSL\n"},"line_number":43,"absolute_offset":1993,"submatches":[{"match":{"text":"verify_SSL"},"start":9,"end":19}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"#pod See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":63,"absolute_offset":3077,"submatches":[{"match":{"text":"verify_SSL"},"start":43,"end":53}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"        SSL_options verify_SSL\n"},"line_number":72,"absolute_offset":3353,"submatches":[{"match":{"text":"verify_SSL"},"start":20,"end":30}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL   => $args{verify_SSL} || $args{verify_ssl} || 0, # no verification by default\n"},"line_number":118,"absolute_offset":4497,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18},{"match":{"text":"verify_SSL"},"start":30,"end":40},{"match":{"text":"verify_ssl"},"start":51,"end":61}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"    if ( ref($self) && ( $self->{verify_SSL} || $self->{SSL_options}{SSL_verify_mode} ) ) {\n"},"line_number":546,"absolute_offset":20836,"submatches":[{"match":{"text":"verify_SSL"},"start":33,"end":43}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"            verify_SSL  => $self->{verify_SSL},\n"},"line_number":549,"absolute_offset":21023,"submatches":[{"match":{"text":"verify_SSL"},"start":12,"end":22},{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL      => $self->{verify_SSL},\n"},"line_number":697,"absolute_offset":25390,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18},{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL       => 0,\n"},"line_number":1058,"absolute_offset":37231,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"    if ($self->{verify_SSL}) {\n"},"line_number":1674,"absolute_offset":55992,"submatches":[{"match":{"text":"verify_SSL"},"start":16,"end":26}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"    # user options override settings from verify_SSL\n"},"line_number":1685,"absolute_offset":56485,"submatches":[{"match":{"text":"verify_SSL"},"start":42,"end":52}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"C<verify_SSL> — A boolean that indicates whether to validate the SSL certificate of an C<https> — connection (default is false)\n"},"line_number":1800,"absolute_offset":59492,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":1823,"absolute_offset":60490,"submatches":[{"match":{"text":"verify_SSL"},"start":38,"end":48}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"verify_SSL\n"},"line_number":2044,"absolute_offset":69118,"submatches":[{"match":{"text":"verify_SSL"},"start":0,"end":10}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"Setting the C<verify_SSL> attribute to a true value will make HTTP::Tiny verify\n"},"line_number":2084,"absolute_offset":70455,"submatches":[{"match":{"text":"verify_SSL"},"start":14,"end":24}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"lines":{"text":"An error will be occur if C<verify_SSL> is true and no CA certificate file\n"},"line_number":2120,"absolute_offset":71673,"submatches":[{"match":{"text":"verify_SSL"},"start":28,"end":38}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/CPANPLUS/inc/bundle/HTTP/Tiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":417864,"human":"0.000418s"},"searches":1,"searches_with_match":1,"bytes_searched":80002,"bytes_printed":4936,"matched_lines":15,"matches":19}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/Crypt-LE/lib/Crypt/LE.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/Crypt-LE/lib/Crypt/LE.pm"},"lines":{"text":"    $self->{ua} = HTTP::Tiny->new( agent => $self->{ua} || __PACKAGE__ . \" v$VERSION\", verify_SSL => 1 );\n"},"line_number":313,"absolute_offset":10352,"submatches":[{"match":{"text":"verify_SSL"},"start":87,"end":97}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/Crypt-LE/lib/Crypt/LE.pm"},"lines":{"text":"            verify_SSL => 1,\n"},"line_number":1585,"absolute_offset":58988,"submatches":[{"match":{"text":"verify_SSL"},"start":12,"end":22}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/C/Crypt-LE/lib/Crypt/LE.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":347319,"human":"0.000347s"},"searches":1,"searches_with_match":1,"bytes_searched":75488,"bytes_printed":713,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/D/Dancer-Plugin-RPC/example/lib/Client/HTTP.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/D/Dancer-Plugin-RPC/example/lib/Client/HTTP.pm"},"lines":{"text":"        verify_SSL => 0,\n"},"line_number":38,"absolute_offset":719,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/D/Dancer-Plugin-RPC/example/lib/Client/HTTP.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":101093,"human":"0.000101s"},"searches":1,"searches_with_match":1,"bytes_searched":892,"bytes_printed":401,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/D/Devel-Cover-Report-Coveralls/lib/Devel/Cover/Report/Coveralls.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/D/Devel-Cover-Report-Coveralls/lib/Devel/Cover/Report/Coveralls.pm"},"lines":{"text":"    my $response = HTTP::Tiny->new( verify_SSL => 1 )\n"},"line_number":188,"absolute_offset":6175,"submatches":[{"match":{"text":"verify_SSL"},"start":36,"end":46}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/D/Devel-Cover-Report-Coveralls/lib/Devel/Cover/Report/Coveralls.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":137585,"human":"0.000138s"},"searches":1,"searches_with_match":1,"bytes_searched":10864,"bytes_printed":473,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/E/Email-Sender-Transport-Mailgun/lib/Email/Sender/Transport/Mailgun.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/E/Email-Sender-Transport-Mailgun/lib/Email/Sender/Transport/Mailgun.pm"},"lines":{"text":"    builder => sub { HTTP::Tiny->new(verify_SSL => 1) },\n"},"line_number":76,"absolute_offset":1391,"submatches":[{"match":{"text":"verify_SSL"},"start":37,"end":47}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/E/Email-Sender-Transport-Mailgun/lib/Email/Sender/Transport/Mailgun.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":123885,"human":"0.000124s"},"searches":1,"searches_with_match":1,"bytes_searched":7539,"bytes_printed":483,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/G/GitHub-Authorization/lib/GitHub/Authorization.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/G/GitHub-Authorization/lib/GitHub/Authorization.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":82,"absolute_offset":1957,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/G/GitHub-Authorization/lib/GitHub/Authorization.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":13849,"human":"0.000014s"},"searches":1,"searches_with_match":1,"bytes_searched":9980,"bytes_printed":410,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Request-FromCurl/lib/HTTP/Request/CurlParameters.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Request-FromCurl/lib/HTTP/Request/CurlParameters.pm"},"lines":{"text":"        push @ssl, verify_SSL => 1;\n"},"line_number":599,"absolute_offset":12083,"submatches":[{"match":{"text":"verify_SSL"},"start":19,"end":29}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Request-FromCurl/lib/HTTP/Request/CurlParameters.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":320464,"human":"0.000320s"},"searches":1,"searches_with_match":1,"bytes_searched":20061,"bytes_printed":440,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"#pod * C<verify_SSL> — A boolean that indicates whether to validate the SSL\n"},"line_number":43,"absolute_offset":1993,"submatches":[{"match":{"text":"verify_SSL"},"start":9,"end":19}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"#pod See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":63,"absolute_offset":3077,"submatches":[{"match":{"text":"verify_SSL"},"start":43,"end":53}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        SSL_options verify_SSL\n"},"line_number":72,"absolute_offset":3353,"submatches":[{"match":{"text":"verify_SSL"},"start":20,"end":30}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL   => $args{verify_SSL} || $args{verify_ssl} || 0, # no verification by default\n"},"line_number":118,"absolute_offset":4497,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18},{"match":{"text":"verify_SSL"},"start":30,"end":40},{"match":{"text":"verify_ssl"},"start":51,"end":61}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"    if ( ref($self) && ( $self->{verify_SSL} || $self->{SSL_options}{SSL_verify_mode} ) ) {\n"},"line_number":551,"absolute_offset":21094,"submatches":[{"match":{"text":"verify_SSL"},"start":33,"end":43}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"            verify_SSL  => $self->{verify_SSL},\n"},"line_number":554,"absolute_offset":21281,"submatches":[{"match":{"text":"verify_SSL"},"start":12,"end":22},{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL      => $self->{verify_SSL},\n"},"line_number":702,"absolute_offset":25648,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18},{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL       => 0,\n"},"line_number":1063,"absolute_offset":37489,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"    if ($self->{verify_SSL}) {\n"},"line_number":1679,"absolute_offset":56250,"submatches":[{"match":{"text":"verify_SSL"},"start":16,"end":26}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"    # user options override settings from verify_SSL\n"},"line_number":1690,"absolute_offset":56743,"submatches":[{"match":{"text":"verify_SSL"},"start":42,"end":52}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"C<verify_SSL> — A boolean that indicates whether to validate the SSL certificate of an C<https> — connection (default is false)\n"},"line_number":1805,"absolute_offset":59750,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":1828,"absolute_offset":60748,"submatches":[{"match":{"text":"verify_SSL"},"start":38,"end":48}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"verify_SSL\n"},"line_number":2053,"absolute_offset":69528,"submatches":[{"match":{"text":"verify_SSL"},"start":0,"end":10}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"Setting the C<verify_SSL> attribute to a true value will make HTTP::Tiny verify\n"},"line_number":2093,"absolute_offset":70865,"submatches":[{"match":{"text":"verify_SSL"},"start":14,"end":24}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"An error will be occur if C<verify_SSL> is true and no CA certificate file\n"},"line_number":2129,"absolute_offset":72083,"submatches":[{"match":{"text":"verify_SSL"},"start":28,"end":38}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny/lib/HTTP/Tiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":357822,"human":"0.000358s"},"searches":1,"searches_with_match":1,"bytes_searched":80464,"bytes_printed":4840,"matched_lines":15,"matches":19}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-SPDY/lib/HTTP/Tiny/SPDY.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-SPDY/lib/HTTP/Tiny/SPDY.pm"},"lines":{"text":"            verify_SSL      => $self->{verify_SSL},\n"},"line_number":177,"absolute_offset":5327,"submatches":[{"match":{"text":"verify_SSL"},"start":12,"end":22},{"match":{"text":"verify_SSL"},"start":39,"end":49}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-SPDY/lib/HTTP/Tiny/SPDY.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":118596,"human":"0.000119s"},"searches":1,"searches_with_match":1,"bytes_searched":13228,"bytes_printed":467,"matched_lines":1,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-UA/lib/HTTP/Tiny/UA.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-UA/lib/HTTP/Tiny/UA.pm"},"lines":{"text":"#pod * C<verify_SSL>\n"},"line_number":40,"absolute_offset":1421,"submatches":[{"match":{"text":"verify_SSL"},"start":9,"end":19}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-UA/lib/HTTP/Tiny/UA.pm"},"lines":{"text":"#pod C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":47,"absolute_offset":1739,"submatches":[{"match":{"text":"verify_SSL"},"start":7,"end":17}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-UA/lib/HTTP/Tiny/UA.pm"},"lines":{"text":"C<verify_SSL>\n"},"line_number":170,"absolute_offset":4079,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-UA/lib/HTTP/Tiny/UA.pm"},"lines":{"text":"C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":184,"absolute_offset":4378,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tiny-UA/lib/HTTP/Tiny/UA.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":59306,"human":"0.000059s"},"searches":1,"searches_with_match":1,"bytes_searched":7098,"bytes_printed":1205,"matched_lines":4,"matches":4}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/Curl.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/Curl.pm"},"lines":{"text":"    unless ($self->{verify_SSL}) {\n"},"line_number":123,"absolute_offset":2742,"submatches":[{"match":{"text":"verify_SSL"},"start":20,"end":30}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/Curl.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":66689,"human":"0.000067s"},"searches":1,"searches_with_match":1,"bytes_searched":3491,"bytes_printed":400,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/LWP.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/LWP.pm"},"lines":{"text":"    unless ($attr{verify_SSL}) {\n"},"line_number":110,"absolute_offset":2507,"submatches":[{"match":{"text":"verify_SSL"},"start":18,"end":28}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/LWP.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":39250,"human":"0.000039s"},"searches":1,"searches_with_match":1,"bytes_searched":2942,"bytes_printed":396,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/Wget.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/Wget.pm"},"lines":{"text":"    if ($supports{https} && !$self->{verify_SSL}) {\n"},"line_number":149,"absolute_offset":3738,"submatches":[{"match":{"text":"verify_SSL"},"start":37,"end":47}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish/Wget.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":48089,"human":"0.000048s"},"searches":1,"searches_with_match":1,"bytes_searched":4707,"bytes_printed":417,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish.pm"},"lines":{"text":"C<timeout>, C<max_redirect>, C<agent>, C<default_headers> and C<verify_SSL> are translated.\n"},"line_number":137,"absolute_offset":3277,"submatches":[{"match":{"text":"verify_SSL"},"start":64,"end":74}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish.pm"},"lines":{"text":"C<timeout>, C<max_redirect>, C<agent>, C<default_headers> and C<verify_SSL> are supported.\n"},"line_number":159,"absolute_offset":3669,"submatches":[{"match":{"text":"verify_SSL"},"start":64,"end":74}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish.pm"},"lines":{"text":"C<timeout>, C<max_redirect>, C<agent>, C<default_headers> and C<verify_SSL> are supported.\n"},"line_number":185,"absolute_offset":4275,"submatches":[{"match":{"text":"verify_SSL"},"start":64,"end":74}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/H/HTTP-Tinyish/lib/HTTP/Tinyish.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":53614,"human":"0.000054s"},"searches":1,"searches_with_match":1,"bytes_searched":4888,"bytes_printed":1113,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/I/IO-Socket-SSL/lib/IO/Socket/SSL.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/I/IO-Socket-SSL/lib/IO/Socket/SSL.pm"},"lines":{"text":"\tmy $ua = HTTP::Tiny->new(verify_SSL => 0,%args);\n"},"line_number":3502,"absolute_offset":108846,"submatches":[{"match":{"text":"verify_SSL"},"start":26,"end":36}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/I/IO-Socket-SSL/lib/IO/Socket/SSL.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":377210,"human":"0.000377s"},"searches":1,"searches_with_match":1,"bytes_searched":115613,"bytes_printed":413,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/I/Installer/lib/Installer/cpanm.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/I/Installer/lib/Installer/cpanm.pm"},"lines":{"text":"  package HTTP::Tiny;use strict;use warnings;our$VERSION='0.056';use Carp ();my@attributes;BEGIN {@attributes=qw(cookie_jar default_headers http_proxy https_proxy keep_alive local_address max_redirect max_size proxy no_proxy timeout SSL_options verify_SSL);my%persist_ok=map {;$_=>1}qw(cookie_jar default_headers max_redirect max_size);no strict 'refs';no warnings 'uninitialized';for my$accessor (@attributes){*{$accessor}=sub {@_ > 1 ? do {delete $_[0]->{handle}if!$persist_ok{$accessor}&& $_[1]ne $_[0]->{$accessor};$_[0]->{$accessor}=$_[1]}: $_[0]->{$accessor}}}}sub agent {my($self,$agent)=@_;if(@_ > 1){$self->{agent}=(defined$agent && $agent =~ / $/)? $agent .$self->_agent : $agent}return$self->{agent}}sub new {my($class,%args)=@_;my$self={max_redirect=>5,timeout=>60,keep_alive=>1,verify_SSL=>$args{verify_SSL}|| $args{verify_ssl}|| 0,no_proxy=>$ENV{no_proxy},};bless$self,$class;$class->_validate_cookie_jar($args{cookie_jar})if$args{cookie_jar};for my$key (@attributes){$self->{$key}=$args{$key}if exists$args{$key}}$self->agent(exists$args{agent}? $args{agent}: $class->_agent);$self->_set_proxies;return$self}sub _set_proxies {my ($self)=@_;if (!exists$self->{proxy}){$self->{proxy}=$ENV{all_proxy}|| $ENV{ALL_PROXY}}if (defined$self->{proxy}){$self->_split_proxy('generic proxy'=>$self->{proxy})}else {delete$self->{proxy}}if (!exists$self->{http_proxy}){local$ENV{HTTP_PROXY}if$ENV{REQUEST_METHOD};$self->{http_proxy}=$ENV{http_proxy}|| $ENV{HTTP_PROXY}|| $self->{proxy}}if (defined$self->{http_proxy}){$self->_split_proxy(http_proxy=>$self->{http_proxy});$self->{_has_proxy}{http}=1}else {delete$self->{http_proxy}}if (!exists$self->{https_proxy}){$self->{https_proxy}=$ENV{https_proxy}|| $ENV{HTTPS_PROXY}|| $self->{proxy}}if ($self->{https_proxy}){$self->_split_proxy(https_proxy=>$self->{https_proxy});$self->{_has_proxy}{https}=1}else {delete$self->{https_proxy}}unless (ref$self->{no_proxy}eq 'ARRAY'){$self->{no_proxy}=(defined$self->{no_proxy})? [split /\\s*,\\s*/,$self->{no_proxy}]: []}return}for my$sub_name (qw/get head put post delete/){my$req_method=uc$sub_name;no strict 'refs';eval <<\"HERE\"}sub post_form {my ($self,$url,$data,$args)=@_;(@_==3 || @_==4 && ref$args eq 'HASH')or Carp::croak(q/Usage: $http->post_form(URL, DATAREF, [HASHREF])/ .\"\\n\");my$headers={};while (my ($key,$value)=each %{$args->{headers}|| {}}){$headers->{lc$key}=$value}delete$args->{headers};return$self->request('POST',$url,{%$args,content=>$self->www_form_urlencode($data),headers=>{%$headers,'content-type'=>'application/x-www-form-urlencoded' },})}sub mirror {my ($self,$url,$file,$args)=@_;@_==3 || (@_==4 && ref$args eq 'HASH')or Carp::croak(q/Usage: $http->mirror(URL, FILE, [HASHREF])/ .\"\\n\");if (-e $file and my$mtime=(stat($file))[9]){$args->{headers}{'if-modified-since'}||= $self->_http_date($mtime)}my$tempfile=$file .int(rand(2**31));require Fcntl;sysopen my$fh,$tempfile,Fcntl::O_CREAT()|Fcntl::O_EXCL()|Fcntl::O_WRONLY()or Carp::croak(qq/Error: Could not create temporary file $tempfile for downloading: $!\\n/);binmode$fh;$args->{data_callback}=sub {print {$fh}$_[0]};my$response=$self->request('GET',$url,$args);close$fh or Carp::croak(qq/Error: Caught error closing temporary file $tempfile: $!\\n/);if ($response->{success}){rename$tempfile,$file or Carp::croak(qq/Error replacing $file with $tempfile: $!\\n/);my$lm=$response->{headers}{'last-modified'};if ($lm and my$mtime=$self->_parse_http_date($lm)){utime$mtime,$mtime,$file}}$response->{success}||= $response->{status}eq '304';unlink$tempfile;return$response}my%idempotent=map {$_=>1}qw/GET HEAD PUT DELETE OPTIONS TRACE/;sub request {my ($self,$method,$url,$args)=@_;@_==3 || (@_==4 && ref$args eq 'HASH')or Carp::croak(q/Usage: $http->request(METHOD, URL, [HASHREF])/ .\"\\n\");$args ||= {};my$response;for (0 .. 1){$response=eval {$self->_request($method,$url,$args)};last unless $@ && $idempotent{$method}&& $@ =~ m{^(?:Socket closed|Unexpected end)}}if (my$e=$@){if (ref$e eq 'HASH' && exists$e->{status}){return$e}$e=\"$e\";$response={url=>$url,success=>q{},status=>599,reason=>'Internal Exception',content=>$e,headers=>{'content-type'=>'text/plain','content-length'=>length$e,}}}return$response}sub www_form_urlencode {my ($self,$data)=@_;(@_==2 && ref$data)or Carp::croak(q/Usage: $http->www_form_urlencode(DATAREF)/ .\"\\n\");(ref$data eq 'HASH' || ref$data eq 'ARRAY')or Carp::croak(\"form data must be a hash or array reference\\n\");my@params=ref$data eq 'HASH' ? %$data : @$data;@params % 2==0 or Carp::croak(\"form data reference must have an even number of terms\\n\");my@terms;while(@params){my ($key,$value)=splice(@params,0,2);if (ref$value eq 'ARRAY'){unshift@params,map {$key=>$_}@$value}else {push@terms,join(\"=\",map {$self->_uri_escape($_)}$key,$value)}}return join(\"&\",(ref$data eq 'ARRAY')? (@terms): (sort@terms))}sub can_ssl {my ($self)=@_;my($ok,$reason)=(1,'');unless (eval {require IO::Socket::SSL;IO::Socket::SSL->VERSION(1.42)}){$ok=0;$reason .= qq/IO::Socket::SSL 1.42 must be installed for https support\\n/}unless (eval {require Net::SSLeay;Net::SSLeay->VERSION(1.49)}){$ok=0;$reason .= qq/Net::SSLeay 1.49 must be installed for https support\\n/}if (ref($self)&& ($self->{verify_SSL}|| $self->{SSL_options}{SSL_verify_mode})){my$handle=HTTP::Tiny::Handle->new(SSL_options=>$self->{SSL_options},verify_SSL=>$self->{verify_SSL},);unless (eval {$handle->_find_CA_file;1}){$ok=0;$reason .= \"$@\"}}wantarray ? ($ok,$reason): $ok}my%DefaultPort=(http=>80,https=>443,);sub _agent {my$class=ref($_[0])|| $_[0];(my$default_agent=$class)=~ s{::}{-}g;return$default_agent .\"/\" .$class->VERSION}sub _request {my ($self,$method,$url,$args)=@_;my ($scheme,$host,$port,$path_query,$auth)=$self->_split_url($url);my$request={method=>$method,scheme=>$scheme,host=>$host,port=>$port,host_port=>($port==$DefaultPort{$scheme}? $host : \"$host:$port\"),uri=>$path_query,headers=>{},};my$handle=delete$self->{handle};if ($handle){unless ($handle->can_reuse($scheme,$host,$port)){$handle->close;undef$handle}}$handle ||= $self->_open_handle($request,$scheme,$host,$port);$self->_prepare_headers_and_cb($request,$args,$url,$auth);$handle->write_request($request);my$response;do {$response=$handle->read_response_header}until (substr($response->{status},0,1)ne '1');$self->_update_cookie_jar($url,$response)if$self->{cookie_jar};if (my@redir_args=$self->_maybe_redirect($request,$response,$args)){$handle->close;return$self->_request(@redir_args,$args)}my$known_message_length;if ($method eq 'HEAD' || $response->{status}=~ /^[23]04/){$known_message_length=1}else {my$data_cb=$self->_prepare_data_cb($response,$args);$known_message_length=$handle->read_body($data_cb,$response)}if ($self->{keep_alive}&& $known_message_length && $response->{protocol}eq 'HTTP/1.1' && ($response->{headers}{connection}|| '')ne 'close'){$self->{handle}=$handle}else {$handle->close}$response->{success}=substr($response->{status},0,1)eq '2';$response->{url}=$url;return$response}sub _open_handle {my ($self,$request,$scheme,$host,$port)=@_;my$handle=HTTP::Tiny::Handle->new(timeout=>$self->{timeout},SSL_options=>$self->{SSL_options},verify_SSL=>$self->{verify_SSL},local_address=>$self->{local_address},keep_alive=>$self->{keep_alive});if ($self->{_has_proxy}{$scheme}&&!grep {$host =~ /\\Q$_\\E$/}@{$self->{no_proxy}}){return$self->_proxy_connect($request,$handle)}else {return$handle->connect($scheme,$host,$port)}}sub _proxy_connect {my ($self,$request,$handle)=@_;my@proxy_vars;if ($request->{scheme}eq 'https'){Carp::croak(qq{No https_proxy defined})unless$self->{https_proxy};@proxy_vars=$self->_split_proxy(https_proxy=>$self->{https_proxy});if ($proxy_vars[0]eq 'https'){Carp::croak(qq{Can't proxy https over https: $request->{uri} via $self->{https_proxy}})}}else {Carp::croak(qq{No http_proxy defined})unless$self->{http_proxy};@proxy_vars=$self->_split_proxy(http_proxy=>$self->{http_proxy})}my ($p_scheme,$p_host,$p_port,$p_auth)=@proxy_vars;if (length$p_auth &&!defined$request->{headers}{'proxy-authorization'}){$self->_add_basic_auth_header($request,'proxy-authorization'=>$p_auth)}$handle->connect($p_scheme,$p_host,$p_port);if ($request->{scheme}eq 'https'){$self->_create_proxy_tunnel($request,$handle)}else {$request->{uri}=\"$request->{scheme}://$request->{host_port}$request->{uri}\"}return$handle}sub _split_proxy {my ($self,$type,$proxy)=@_;my ($scheme,$host,$port,$path_query,$auth)=eval {$self->_split_url($proxy)};unless(defined($scheme)&& length($scheme)&& length($host)&& length($port)&& $path_query eq '/'){Carp::croak(qq{$type URL must be in format http[s]://[auth@]<host>:<port>/\\n})}return ($scheme,$host,$port,$auth)}sub _create_proxy_tunnel {my ($self,$request,$handle)=@_;$handle->_assert_ssl;my$agent=exists($request->{headers}{'user-agent'})? $request->{headers}{'user-agent'}: $self->{agent};my$connect_request={method=>'CONNECT',uri=>\"$request->{host}:$request->{port}\",headers=>{host=>\"$request->{host}:$request->{port}\",'user-agent'=>$agent,}};if ($request->{headers}{'proxy-authorization'}){$connect_request->{headers}{'proxy-authorization'}=delete$request->{headers}{'proxy-authorization'}}$handle->write_request($connect_request);my$response;do {$response=$handle->read_response_header}until (substr($response->{status},0,1)ne '1');unless (substr($response->{status},0,1)eq '2'){die$response}$handle->start_ssl($request->{host});return}sub _prepare_headers_and_cb {my ($self,$request,$args,$url,$auth)=@_;for ($self->{default_headers},$args->{headers}){next unless defined;while (my ($k,$v)=each %$_){$request->{headers}{lc$k}=$v}}if (exists$request->{headers}{'host'}){die(qq/The 'Host' header must not be provided as header option\\n/)}$request->{headers}{'host'}=$request->{host_port};$request->{headers}{'user-agent'}||= $self->{agent};$request->{headers}{'connection'}=\"close\" unless$self->{keep_alive};if (defined$args->{content}){if (ref$args->{content}eq 'CODE'){$request->{headers}{'content-type'}||= \"application/octet-stream\";$request->{headers}{'transfer-encoding'}='chunked' unless$request->{headers}{'content-length'}|| $request->{headers}{'transfer-encoding'};$request->{cb}=$args->{content}}elsif (length$args->{content}){my$content=$args->{content};if ($] ge '5.008'){utf8::downgrade($content,1)or die(qq/Wide character in request message body\\n/)}$request->{headers}{'content-type'}||= \"application/octet-stream\";$request->{headers}{'content-length'}=length$content unless$request->{headers}{'content-length'}|| $request->{headers}{'transfer-encoding'};$request->{cb}=sub {substr$content,0,length$content,''}}$request->{trailer_cb}=$args->{trailer_callback}if ref$args->{trailer_callback}eq 'CODE'}if ($self->{cookie_jar}){my$cookies=$self->cookie_jar->cookie_header($url);$request->{headers}{cookie}=$cookies if length$cookies}if (length$auth &&!defined$request->{headers}{authorization}){$self->_add_basic_auth_header($request,'authorization'=>$auth)}return}sub _add_basic_auth_header {my ($self,$request,$header,$auth)=@_;require MIME::Base64;$request->{headers}{$header}=\"Basic \" .MIME::Base64::encode_base64($auth,\"\");return}sub _prepare_data_cb {my ($self,$response,$args)=@_;my$data_cb=$args->{data_callback};$response->{content}='';if (!$data_cb || $response->{status}!~ /^2/){if (defined$self->{max_size}){$data_cb=sub {$_[1]->{content}.= $_[0];die(qq/Size of response body exceeds the maximum allowed of $self->{max_size}\\n/)if length $_[1]->{content}> $self->{max_size}}}else {$data_cb=sub {$_[1]->{content}.= $_[0]}}}return$data_cb}sub _update_cookie_jar {my ($self,$url,$response)=@_;my$cookies=$response->{headers}->{'set-cookie'};return unless defined$cookies;my@cookies=ref$cookies ? @$cookies : $cookies;$self->cookie_jar->add($url,$_)for@cookies;return}sub _validate_cookie_jar {my ($class,$jar)=@_;for my$method (qw/add cookie_header/){Carp::croak(qq/Cookie jar must provide the '$method' method\\n/)unless ref($jar)&& ref($jar)->can($method)}return}sub _maybe_redirect {my ($self,$request,$response,$args)=@_;my$headers=$response->{headers};my ($status,$method)=($response->{status},$request->{method});if (($status eq '303' or ($status =~ /^30[1278]/ && $method =~ /^GET|HEAD$/))and $headers->{location}and ++$args->{redirects}<= $self->{max_redirect}){my$location=($headers->{location}=~ /^\\//)? \"$request->{scheme}://$request->{host_port}$headers->{location}\" : $headers->{location};return (($status eq '303' ? 'GET' : $method),$location)}return}sub _split_url {my$url=pop;my ($scheme,$host,$path_query)=$url =~ m<\\A([^:/?#]+)://([^/?#]*)([^#]*)> or die(qq/Cannot parse URL: '$url'\\n/);$scheme=lc$scheme;$path_query=\"/$path_query\" unless$path_query =~ m<\\A/>;my$auth='';if ((my$i=index$host,'@')!=-1){$auth=substr$host,0,$i,'';substr$host,0,1,'';$auth =~ s/%([0-9A-Fa-f]{2})/chr(hex($1))/eg}my$port=$host =~ s/:(\\d*)\\z// && length $1 ? $1 : $scheme eq 'http' ? 80 : $scheme eq 'https' ? 443 : undef;return ($scheme,(length$host ? lc$host : \"localhost\"),$port,$path_query,$auth)}my$DoW=\"Sun|Mon|Tue|Wed|Thu|Fri|Sat\";my$MoY=\"Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec\";sub _http_date {my ($sec,$min,$hour,$mday,$mon,$year,$wday)=gmtime($_[1]);return sprintf(\"%s, %02d %s %04d %02d:%02d:%02d GMT\",substr($DoW,$wday*4,3),$mday,substr($MoY,$mon*4,3),$year+1900,$hour,$min,$sec)}sub _parse_http_date {my ($self,$str)=@_;require Time::Local;my@tl_parts;if ($str =~ /^[SMTWF][a-z]+, +(\\d{1,2}) ($MoY) +(\\d\\d\\d\\d) +(\\d\\d):(\\d\\d):(\\d\\d) +GMT$/){@tl_parts=($6,$5,$4,$1,(index($MoY,$2)/4),$3)}elsif ($str =~ /^[SMTWF][a-z]+, +(\\d\\d)-($MoY)-(\\d{2,4}) +(\\d\\d):(\\d\\d):(\\d\\d) +GMT$/){@tl_parts=($6,$5,$4,$1,(index($MoY,$2)/4),$3)}elsif ($str =~ /^[SMTWF][a-z]+ +($MoY) +(\\d{1,2}) +(\\d\\d):(\\d\\d):(\\d\\d) +(?:[^0-9]+ +)?(\\d\\d\\d\\d)$/){@tl_parts=($5,$4,$3,$2,(index($MoY,$1)/4),$6)}return eval {my$t=@tl_parts ? Time::Local::timegm(@tl_parts): -1;$t < 0 ? undef : $t}}my%escapes=map {chr($_)=>sprintf(\"%%%02X\",$_)}0..255;$escapes{' '}=\"+\";my$unsafe_char=qr/[^A-Za-z0-9\\-\\._~]/;sub _uri_escape {my ($self,$str)=@_;if ($] ge '5.008'){utf8::encode($str)}else {$str=pack(\"U*\",unpack(\"C*\",$str))if (length$str==do {use bytes;length$str});$str=pack(\"C*\",unpack(\"C*\",$str))}$str =~ s/($unsafe_char)/$escapes{$1}/ge;return$str}package HTTP::Tiny::Handle;use strict;use warnings;use Errno qw[EINTR EPIPE];use IO::Socket qw[SOCK_STREAM];my$SOCKET_CLASS=$ENV{PERL_HTTP_TINY_IPV4_ONLY}? 'IO::Socket::INET' : eval {require IO::Socket::IP;IO::Socket::IP->VERSION(0.25)}? 'IO::Socket::IP' : 'IO::Socket::INET';sub BUFSIZE () {32768}my$Printable=sub {local $_=shift;s/\\r/\\\\r/g;s/\\n/\\\\n/g;s/\\t/\\\\t/g;s/([^\\x20-\\x7E])/sprintf('\\\\x%.2X', ord($1))/ge;$_};my$Token=qr/[\\x21\\x23-\\x27\\x2A\\x2B\\x2D\\x2E\\x30-\\x39\\x41-\\x5A\\x5E-\\x7A\\x7C\\x7E]/;sub new {my ($class,%args)=@_;return bless {rbuf=>'',timeout=>60,max_line_size=>16384,max_header_lines=>64,verify_SSL=>0,SSL_options=>{},%args },$class}sub connect {@_==4 || die(q/Usage: $handle->connect(scheme, host, port)/ .\"\\n\");my ($self,$scheme,$host,$port)=@_;if ($scheme eq 'https'){$self->_assert_ssl}elsif ($scheme ne 'http'){die(qq/Unsupported URL scheme '$scheme'\\n/)}$self->{fh}=$SOCKET_CLASS->new(PeerHost=>$host,PeerPort=>$port,$self->{local_address}? (LocalAddr=>$self->{local_address}): (),Proto=>'tcp',Type=>SOCK_STREAM,Timeout=>$self->{timeout},KeepAlive=>!!$self->{keep_alive})or die(qq/Could not connect to '$host:$port': $@\\n/);binmode($self->{fh})or die(qq/Could not binmode() socket: '$!'\\n/);$self->start_ssl($host)if$scheme eq 'https';$self->{scheme}=$scheme;$self->{host}=$host;$self->{port}=$port;$self->{pid}=$$;$self->{tid}=_get_tid();return$self}sub start_ssl {my ($self,$host)=@_;if (ref($self->{fh})eq 'IO::Socket::SSL'){unless ($self->{fh}->stop_SSL){my$ssl_err=IO::Socket::SSL->errstr;die(qq/Error halting prior SSL connection: $ssl_err/)}}my$ssl_args=$self->_ssl_args($host);IO::Socket::SSL->start_SSL($self->{fh},%$ssl_args,SSL_create_ctx_callback=>sub {my$ctx=shift;Net::SSLeay::CTX_set_mode($ctx,Net::SSLeay::MODE_AUTO_RETRY())},);unless (ref($self->{fh})eq 'IO::Socket::SSL'){my$ssl_err=IO::Socket::SSL->errstr;die(qq/SSL connection failed for $host: $ssl_err\\n/)}}sub close {@_==1 || die(q/Usage: $handle->close()/ .\"\\n\");my ($self)=@_;CORE::close($self->{fh})or die(qq/Could not close socket: '$!'\\n/)}sub write {@_==2 || die(q/Usage: $handle->write(buf)/ .\"\\n\");my ($self,$buf)=@_;if ($] ge '5.008'){utf8::downgrade($buf,1)or die(qq/Wide character in write()\\n/)}my$len=length$buf;my$off=0;local$SIG{PIPE}='IGNORE';while (){$self->can_write or die(qq/Timed out while waiting for socket to become ready for writing\\n/);my$r=syswrite($self->{fh},$buf,$len,$off);if (defined$r){$len -= $r;$off += $r;last unless$len > 0}elsif ($!==EPIPE){die(qq/Socket closed by remote server: $!\\n/)}elsif ($!!=EINTR){if ($self->{fh}->can('errstr')){my$err=$self->{fh}->errstr();die (qq/Could not write to SSL socket: '$err'\\n /)}else {die(qq/Could not write to socket: '$!'\\n/)}}}return$off}sub read {@_==2 || @_==3 || die(q/Usage: $handle->read(len [, allow_partial])/ .\"\\n\");my ($self,$len,$allow_partial)=@_;my$buf='';my$got=length$self->{rbuf};if ($got){my$take=($got < $len)? $got : $len;$buf=substr($self->{rbuf},0,$take,'');$len -= $take}while ($len > 0){$self->can_read or die(q/Timed out while waiting for socket to become ready for reading/ .\"\\n\");my$r=sysread($self->{fh},$buf,$len,length$buf);if (defined$r){last unless$r;$len -= $r}elsif ($!!=EINTR){if ($self->{fh}->can('errstr')){my$err=$self->{fh}->errstr();die (qq/Could not read from SSL socket: '$err'\\n /)}else {die(qq/Could not read from socket: '$!'\\n/)}}}if ($len &&!$allow_partial){die(qq/Unexpected end of stream\\n/)}return$buf}sub readline {@_==1 || die(q/Usage: $handle->readline()/ .\"\\n\");my ($self)=@_;while (){if ($self->{rbuf}=~ s/\\A ([^\\x0D\\x0A]* \\x0D?\\x0A)//x){return $1}if (length$self->{rbuf}>= $self->{max_line_size}){die(qq/Line size exceeds the maximum allowed size of $self->{max_line_size}\\n/)}$self->can_read or die(qq/Timed out while waiting for socket to become ready for reading\\n/);my$r=sysread($self->{fh},$self->{rbuf},BUFSIZE,length$self->{rbuf});if (defined$r){last unless$r}elsif ($!!=EINTR){if ($self->{fh}->can('errstr')){my$err=$self->{fh}->errstr();die (qq/Could not read from SSL socket: '$err'\\n /)}else {die(qq/Could not read from socket: '$!'\\n/)}}}die(qq/Unexpected end of stream while looking for line\\n/)}sub read_header_lines {@_==1 || @_==2 || die(q/Usage: $handle->read_header_lines([headers])/ .\"\\n\");my ($self,$headers)=@_;$headers ||= {};my$lines=0;my$val;while (){my$line=$self->readline;if (++$lines >= $self->{max_header_lines}){die(qq/Header lines exceeds maximum number allowed of $self->{max_header_lines}\\n/)}elsif ($line =~ /\\A ([^\\x00-\\x1F\\x7F:]+) : [\\x09\\x20]* ([^\\x0D\\x0A]*)/x){my ($field_name)=lc $1;if (exists$headers->{$field_name}){for ($headers->{$field_name}){$_=[$_]unless ref $_ eq \"ARRAY\";push @$_,$2;$val=\\$_->[-1]}}else {$val=\\($headers->{$field_name}=$2)}}elsif ($line =~ /\\A [\\x09\\x20]+ ([^\\x0D\\x0A]*)/x){$val or die(qq/Unexpected header continuation line\\n/);next unless length $1;$$val .= ' ' if length $$val;$$val .= $1}elsif ($line =~ /\\A \\x0D?\\x0A \\z/x){last}else {die(q/Malformed header line: / .$Printable->($line).\"\\n\")}}return$headers}sub write_request {@_==2 || die(q/Usage: $handle->write_request(request)/ .\"\\n\");my($self,$request)=@_;$self->write_request_header(@{$request}{qw/method uri headers/});$self->write_body($request)if$request->{cb};return}my%HeaderCase=('content-md5'=>'Content-MD5','etag'=>'ETag','te'=>'TE','www-authenticate'=>'WWW-Authenticate','x-xss-protection'=>'X-XSS-Protection',);sub write_header_lines {(@_==2 || @_==3 && ref $_[1]eq 'HASH')|| die(q/Usage: $handle->write_header_lines(headers[,prefix])/ .\"\\n\");my($self,$headers,$prefix_data)=@_;my$buf=(defined$prefix_data ? $prefix_data : '');while (my ($k,$v)=each %$headers){my$field_name=lc$k;if (exists$HeaderCase{$field_name}){$field_name=$HeaderCase{$field_name}}else {$field_name =~ /\\A $Token+ \\z/xo or die(q/Invalid HTTP header field name: / .$Printable->($field_name).\"\\n\");$field_name =~ s/\\b(\\w)/\\u$1/g;$HeaderCase{lc$field_name}=$field_name}for (ref$v eq 'ARRAY' ? @$v : $v){$_='' unless defined $_;$buf .= \"$field_name: $_\\x0D\\x0A\"}}$buf .= \"\\x0D\\x0A\";return$self->write($buf)}sub read_body {@_==3 || die(q/Usage: $handle->read_body(callback, response)/ .\"\\n\");my ($self,$cb,$response)=@_;my$te=$response->{headers}{'transfer-encoding'}|| '';my$chunked=grep {/chunked/i}(ref$te eq 'ARRAY' ? @$te : $te);return$chunked ? $self->read_chunked_body($cb,$response): $self->read_content_body($cb,$response)}sub write_body {@_==2 || die(q/Usage: $handle->write_body(request)/ .\"\\n\");my ($self,$request)=@_;if ($request->{headers}{'content-length'}){return$self->write_content_body($request)}else {return$self->write_chunked_body($request)}}sub read_content_body {@_==3 || @_==4 || die(q/Usage: $handle->read_content_body(callback, response, [read_length])/ .\"\\n\");my ($self,$cb,$response,$content_length)=@_;$content_length ||= $response->{headers}{'content-length'};if (defined$content_length){my$len=$content_length;while ($len > 0){my$read=($len > BUFSIZE)? BUFSIZE : $len;$cb->($self->read($read,0),$response);$len -= $read}return length($self->{rbuf})==0}my$chunk;$cb->($chunk,$response)while length($chunk=$self->read(BUFSIZE,1));return}sub write_content_body {@_==2 || die(q/Usage: $handle->write_content_body(request)/ .\"\\n\");my ($self,$request)=@_;my ($len,$content_length)=(0,$request->{headers}{'content-length'});while (){my$data=$request->{cb}->();defined$data && length$data or last;if ($] ge '5.008'){utf8::downgrade($data,1)or die(qq/Wide character in write_content()\\n/)}$len += $self->write($data)}$len==$content_length or die(qq/Content-Length mismatch (got: $len expected: $content_length)\\n/);return$len}sub read_chunked_body {@_==3 || die(q/Usage: $handle->read_chunked_body(callback, $response)/ .\"\\n\");my ($self,$cb,$response)=@_;while (){my$head=$self->readline;$head =~ /\\A ([A-Fa-f0-9]+)/x or die(q/Malformed chunk head: / .$Printable->($head).\"\\n\");my$len=hex($1)or last;$self->read_content_body($cb,$response,$len);$self->read(2)eq \"\\x0D\\x0A\" or die(qq/Malformed chunk: missing CRLF after chunk data\\n/)}$self->read_header_lines($response->{headers});return 1}sub write_chunked_body {@_==2 || die(q/Usage: $handle->write_chunked_body(request)/ .\"\\n\");my ($self,$request)=@_;my$len=0;while (){my$data=$request->{cb}->();defined$data && length$data or last;if ($] ge '5.008'){utf8::downgrade($data,1)or die(qq/Wide character in write_chunked_body()\\n/)}$len += length$data;my$chunk=sprintf '%X',length$data;$chunk .= \"\\x0D\\x0A\";$chunk .= $data;$chunk .= \"\\x0D\\x0A\";$self->write($chunk)}$self->write(\"0\\x0D\\x0A\");$self->write_header_lines($request->{trailer_cb}->())if ref$request->{trailer_cb}eq 'CODE';return$len}sub read_response_header {@_==1 || die(q/Usage: $handle->read_response_header()/ .\"\\n\");my ($self)=@_;my$line=$self->readline;$line =~ /\\A (HTTP\\/(0*\\d+\\.0*\\d+)) [\\x09\\x20]+ ([0-9]{3}) [\\x09\\x20]+ ([^\\x0D\\x0A]*) \\x0D?\\x0A/x or die(q/Malformed Status-Line: / .$Printable->($line).\"\\n\");my ($protocol,$version,$status,$reason)=($1,$2,$3,$4);die (qq/Unsupported HTTP protocol: $protocol\\n/)unless$version =~ /0*1\\.0*[01]/;return {status=>$status,reason=>$reason,headers=>$self->read_header_lines,protocol=>$protocol,}}sub write_request_header {@_==4 || die(q/Usage: $handle->write_request_header(method, request_uri, headers)/ .\"\\n\");my ($self,$method,$request_uri,$headers)=@_;return$self->write_header_lines($headers,\"$method $request_uri HTTP/1.1\\x0D\\x0A\")}sub _do_timeout {my ($self,$type,$timeout)=@_;$timeout=$self->{timeout}unless defined$timeout && $timeout >= 0;my$fd=fileno$self->{fh};defined$fd && $fd >= 0 or die(qq/select(2): 'Bad file descriptor'\\n/);my$initial=time;my$pending=$timeout;my$nfound;vec(my$fdset='',$fd,1)=1;while (){$nfound=($type eq 'read')? select($fdset,undef,undef,$pending): select(undef,$fdset,undef,$pending);if ($nfound==-1){$!==EINTR or die(qq/select(2): '$!'\\n/);redo if!$timeout || ($pending=$timeout - (time - $initial))> 0;$nfound=0}last}$!=0;return$nfound}sub can_read {@_==1 || @_==2 || die(q/Usage: $handle->can_read([timeout])/ .\"\\n\");my$self=shift;if (ref($self->{fh})eq 'IO::Socket::SSL'){return 1 if$self->{fh}->pending}return$self->_do_timeout('read',@_)}sub can_write {@_==1 || @_==2 || die(q/Usage: $handle->can_write([timeout])/ .\"\\n\");my$self=shift;return$self->_do_timeout('write',@_)}sub _assert_ssl {my($ok,$reason)=HTTP::Tiny->can_ssl();die$reason unless$ok}sub can_reuse {my ($self,$scheme,$host,$port)=@_;return 0 if $self->{pid}!=$$ || $self->{tid}!=_get_tid()|| length($self->{rbuf})|| $scheme ne $self->{scheme}|| $host ne $self->{host}|| $port ne $self->{port}|| eval {$self->can_read(0)}|| $@ ;return 1}sub _find_CA_file {my$self=shift();if ($self->{SSL_options}->{SSL_ca_file}){unless (-r $self->{SSL_options}->{SSL_ca_file}){die qq/SSL_ca_file '$self->{SSL_options}->{SSL_ca_file}' not found or not readable\\n/}return$self->{SSL_options}->{SSL_ca_file}}return Mozilla::CA::SSL_ca_file()if eval {require Mozilla::CA;1};for my$ca_bundle (\"/etc/ssl/certs/ca-certificates.crt\",\"/etc/pki/tls/certs/ca-bundle.crt\",\"/etc/ssl/ca-bundle.pem\",\"/etc/openssl/certs/ca-certificates.crt\",\"/etc/ssl/cert.pem\",\"/usr/local/share/certs/ca-root-nss.crt\",\"/etc/pki/tls/cacert.pem\",\"/etc/certs/ca-certificates.crt\",){return$ca_bundle if -e $ca_bundle}die qq/Couldn't find a CA bundle with which to verify the SSL certificate.\\n/ .qq/Try installing Mozilla::CA from CPAN\\n/}sub _get_tid {no warnings 'reserved';return threads->can(\"tid\")? threads->tid : 0}sub _ssl_args {my ($self,$host)=@_;my%ssl_args;if (Net::SSLeay::OPENSSL_VERSION_NUMBER()>= 0x01000000){$ssl_args{SSL_hostname}=$host,}if ($self->{verify_SSL}){$ssl_args{SSL_verifycn_scheme}='http';$ssl_args{SSL_verifycn_name}=$host;$ssl_args{SSL_verify_mode}=0x01;$ssl_args{SSL_ca_file}=$self->_find_CA_file}else {$ssl_args{SSL_verifycn_scheme}='none';$ssl_args{SSL_verify_mode}=0x00}for my$k (keys %{$self->{SSL_options}}){$ssl_args{$k}=$self->{SSL_options}{$k}if$k =~ m/^SSL_/}return \\%ssl_args}1;\n"},"line_number":268,"absolute_offset":159705,"submatches":[{"match":{"text":"verify_SSL"},"start":245,"end":255},{"match":{"text":"verify_SSL"},"start":791,"end":801},{"match":{"text":"verify_SSL"},"start":809,"end":819},{"match":{"text":"verify_ssl"},"start":829,"end":839},{"match":{"text":"verify_SSL"},"start":5170,"end":5180},{"match":{"text":"verify_SSL"},"start":5292,"end":5302},{"match":{"text":"verify_SSL"},"start":5312,"end":5322},{"match":{"text":"verify_SSL"},"start":7085,"end":7095},{"match":{"text":"verify_SSL"},"start":7105,"end":7115},{"match":{"text":"verify_SSL"},"start":14737,"end":14747},{"match":{"text":"verify_SSL"},"start":25673,"end":25683}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/I/Installer/lib/Installer/cpanm.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":777037,"human":"0.000777s"},"searches":1,"searches_with_match":1,"bytes_searched":304585,"bytes_printed":27289,"matched_lines":1,"matches":11}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/Mail-BIMI/lib/Mail/BIMI/Role/HasHTTPClient.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/Mail-BIMI/lib/Mail/BIMI/Role/HasHTTPClient.pm"},"lines":{"text":"      verify_SSL => 1,     # Certificates MUST verify\n"},"line_number":24,"absolute_offset":848,"submatches":[{"match":{"text":"verify_SSL"},"start":6,"end":16}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/Mail-BIMI/lib/Mail/BIMI/Role/HasHTTPClient.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":44806,"human":"0.000045s"},"searches":1,"searches_with_match":1,"bytes_searched":1703,"bytes_printed":432,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/Menlo-Legacy/lib/Menlo/CLI/Compat.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/Menlo-Legacy/lib/Menlo/CLI/Compat.pm"},"lines":{"text":"    $backend->new(agent => \"Menlo/$Menlo::VERSION\", verify_SSL => 1);\n"},"line_number":2742,"absolute_offset":81283,"submatches":[{"match":{"text":"verify_SSL"},"start":52,"end":62}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/Menlo-Legacy/lib/Menlo/CLI/Compat.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":266650,"human":"0.000267s"},"searches":1,"searches_with_match":1,"bytes_searched":87068,"bytes_printed":437,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/MetaCPAN-Client/lib/MetaCPAN/Client/Role/HasUA.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/MetaCPAN-Client/lib/MetaCPAN/Client/Role/HasUA.pm"},"lines":{"text":"          verify_SSL => 1 ]\n"},"line_number":27,"absolute_offset":558,"submatches":[{"match":{"text":"verify_SSL"},"start":10,"end":20}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/M/MetaCPAN-Client/lib/MetaCPAN/Client/Role/HasUA.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":113149,"human":"0.000113s"},"searches":1,"searches_with_match":1,"bytes_searched":2399,"bytes_printed":415,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME/lib/Net/ACME/HTTP.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME/lib/Net/ACME/HTTP.pm"},"lines":{"text":"our $verify_SSL = 1;\n"},"line_number":48,"absolute_offset":1105,"submatches":[{"match":{"text":"verify_SSL"},"start":5,"end":15}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME/lib/Net/ACME/HTTP.pm"},"lines":{"text":"    my $ua = Net::ACME::HTTP_Tiny->new( verify_SSL => $verify_SSL );\n"},"line_number":54,"absolute_offset":1227,"submatches":[{"match":{"text":"verify_SSL"},"start":40,"end":50},{"match":{"text":"verify_SSL"},"start":55,"end":65}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME/lib/Net/ACME/HTTP.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":59959,"human":"0.000060s"},"searches":1,"searches_with_match":1,"bytes_searched":4947,"bytes_printed":727,"matched_lines":2,"matches":3}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME/lib/Net/ACME/HTTP_Tiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME/lib/Net/ACME/HTTP_Tiny.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":63,"absolute_offset":1564,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME/lib/Net/ACME/HTTP_Tiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":90845,"human":"0.000091s"},"searches":1,"searches_with_match":1,"bytes_searched":2796,"bytes_printed":382,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME2/lib/Net/ACME2/HTTP.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME2/lib/Net/ACME2/HTTP.pm"},"lines":{"text":"our $verify_SSL = 1;\n"},"line_number":36,"absolute_offset":676,"submatches":[{"match":{"text":"verify_SSL"},"start":5,"end":15}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME2/lib/Net/ACME2/HTTP.pm"},"lines":{"text":"    my $ua = Net::ACME2::HTTP_Tiny->new( verify_SSL => $verify_SSL );\n"},"line_number":42,"absolute_offset":798,"submatches":[{"match":{"text":"verify_SSL"},"start":41,"end":51},{"match":{"text":"verify_SSL"},"start":56,"end":66}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME2/lib/Net/ACME2/HTTP.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":65827,"human":"0.000066s"},"searches":1,"searches_with_match":1,"bytes_searched":8041,"bytes_printed":732,"matched_lines":2,"matches":3}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME2/lib/Net/ACME2/HTTP_Tiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME2/lib/Net/ACME2/HTTP_Tiny.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":73,"absolute_offset":1906,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-ACME2/lib/Net/ACME2/HTTP_Tiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":93411,"human":"0.000093s"},"searches":1,"searches_with_match":1,"bytes_searched":3202,"bytes_printed":386,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-Curl-Parallel/lib/Net/Curl/Parallel.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-Curl-Parallel/lib/Net/Curl/Parallel.pm"},"lines":{"text":"has verify_ssl_peer => (is => 'ro', default => 1);\n"},"line_number":29,"absolute_offset":779,"submatches":[{"match":{"text":"verify_ssl"},"start":4,"end":14}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-Curl-Parallel/lib/Net/Curl/Parallel.pm"},"lines":{"text":"  $curl->setopt(CURLOPT_SSL_VERIFYPEER, $self->verify_ssl_peer);\n"},"line_number":135,"absolute_offset":4319,"submatches":[{"match":{"text":"verify_ssl"},"start":47,"end":57}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-Curl-Parallel/lib/Net/Curl/Parallel.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":124241,"human":"0.000124s"},"searches":1,"searches_with_match":1,"bytes_searched":13464,"bytes_printed":740,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute/AuthRole.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute/AuthRole.pm"},"lines":{"text":"    verify_ssl\n"},"line_number":14,"absolute_offset":201,"submatches":[{"match":{"text":"verify_ssl"},"start":4,"end":14}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute/AuthRole.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":12346,"human":"0.000012s"},"searches":1,"searches_with_match":1,"bytes_searched":3322,"bytes_printed":421,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute.pm"},"lines":{"text":"has verify_ssl   => (is => 'ro', default => sub {! $ENV{OSCOMPUTE_INSECURE}});\n"},"line_number":18,"absolute_offset":435,"submatches":[{"match":{"text":"verify_ssl"},"start":4,"end":14}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute.pm"},"lines":{"text":"            ssl_opts => { verify_hostname => $self->verify_ssl });\n"},"line_number":38,"absolute_offset":947,"submatches":[{"match":{"text":"verify_ssl"},"start":52,"end":62}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute.pm"},"lines":{"text":"=item verify_ssl\n"},"line_number":357,"absolute_offset":9379,"submatches":[{"match":{"text":"verify_ssl"},"start":6,"end":16}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Compute/lib/Net/OpenStack/Compute.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":13021,"human":"0.000013s"},"searches":1,"searches_with_match":1,"bytes_searched":11908,"bytes_printed":1068,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Swift/lib/Net/OpenStack/Swift/InnerKeystone.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Swift/lib/Net/OpenStack/Swift/InnerKeystone.pm"},"lines":{"text":"#has verify_ssl      => (is => 'ro', default => sub {! $ENV{OSCOMPUTE_INSECURE}});\n"},"line_number":16,"absolute_offset":435,"submatches":[{"match":{"text":"verify_ssl"},"start":5,"end":15}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/N/Net-OpenStack-Swift/lib/Net/OpenStack/Swift/InnerKeystone.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":5849,"human":"0.000006s"},"searches":1,"searches_with_match":1,"bytes_searched":4768,"bytes_printed":491,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/PAUSE-Permissions-MetaCPAN/lib/PAUSE/Permissions/MetaCPAN.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/PAUSE-Permissions-MetaCPAN/lib/PAUSE/Permissions/MetaCPAN.pm"},"lines":{"text":"        HTTP::Tiny->new(verify_SSL => 1, agent => $agent);\n"},"line_number":16,"absolute_offset":320,"submatches":[{"match":{"text":"verify_SSL"},"start":24,"end":34}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/PAUSE-Permissions-MetaCPAN/lib/PAUSE/Permissions/MetaCPAN.pm"},"lines":{"text":"  HTTP::Tiny->new(verify_SSL => 1, agent => 'PAUSE-Permissions-MetaCPAN/VERSION')\n"},"line_number":172,"absolute_offset":4258,"submatches":[{"match":{"text":"verify_SSL"},"start":18,"end":28}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/PAUSE-Permissions-MetaCPAN/lib/PAUSE/Permissions/MetaCPAN.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":109819,"human":"0.000110s"},"searches":1,"searches_with_match":1,"bytes_searched":5073,"bytes_printed":820,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-KGB/lib/Parcel/Track/KR/KGB.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-KGB/lib/Parcel/Track/KR/KGB.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":58,"absolute_offset":997,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-KGB/lib/Parcel/Track/KR/KGB.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":148565,"human":"0.000149s"},"searches":1,"searches_with_match":1,"bytes_searched":5534,"bytes_printed":405,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-PostOffice/lib/Parcel/Track/KR/PostOffice.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-PostOffice/lib/Parcel/Track/KR/PostOffice.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":57,"absolute_offset":1073,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-PostOffice/lib/Parcel/Track/KR/PostOffice.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":106383,"human":"0.000106s"},"searches":1,"searches_with_match":1,"bytes_searched":5163,"bytes_printed":434,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-Yellowcap/lib/Parcel/Track/KR/Yellowcap.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-Yellowcap/lib/Parcel/Track/KR/Yellowcap.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":57,"absolute_offset":1010,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Parcel-Track-KR-Yellowcap/lib/Parcel/Track/KR/Yellowcap.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":102110,"human":"0.000102s"},"searches":1,"searches_with_match":1,"bytes_searched":5137,"bytes_printed":430,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Perl-Build/lib/Perl/Build.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Perl-Build/lib/Perl/Build.pm"},"lines":{"text":"    my $http = HTTP::Tinyish->new(verify_SSL => 1);\n"},"line_number":118,"absolute_offset":3600,"submatches":[{"match":{"text":"verify_SSL"},"start":34,"end":44}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Perl-Build/lib/Perl/Build.pm"},"lines":{"text":"    my $http = HTTP::Tinyish->new(verify_SSL => 1);\n"},"line_number":132,"absolute_offset":4015,"submatches":[{"match":{"text":"verify_SSL"},"start":34,"end":44}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Perl-Build/lib/Perl/Build.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":97528,"human":"0.000098s"},"searches":1,"searches_with_match":1,"bytes_searched":16672,"bytes_printed":689,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Perl6-Build/lib/Perl6/Build/Helper.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Perl6-Build/lib/Perl6/Build/Helper.pm"},"lines":{"text":"        return $try->new(agent => $agent, verify_SSL => 1, %argv);\n"},"line_number":14,"absolute_offset":373,"submatches":[{"match":{"text":"verify_SSL"},"start":42,"end":52}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Perl6-Build/lib/Perl6/Build/Helper.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":41635,"human":"0.000042s"},"searches":1,"searches_with_match":1,"bytes_searched":925,"bytes_printed":430,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pinto-Remote-SelfContained/lib/Pinto/Remote/SelfContained/HasHttptiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pinto-Remote-SelfContained/lib/Pinto/Remote/SelfContained/HasHttptiny.pm"},"lines":{"text":"    default => sub { Pinto::Remote::SelfContained::Httptiny->new(verify_SSL => 1) },\n"},"line_number":17,"absolute_offset":331,"submatches":[{"match":{"text":"verify_SSL"},"start":65,"end":75}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pinto-Remote-SelfContained/lib/Pinto/Remote/SelfContained/HasHttptiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":82568,"human":"0.000083s"},"searches":1,"searches_with_match":1,"bytes_searched":960,"bytes_printed":518,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Plack/lib/Plack/LWPish.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Plack/lib/Plack/LWPish.pm"},"lines":{"text":"    $self->{http} = @_ == 1 ? $_[0] : HTTP::Tiny->new(verify_SSL => 1, @_);\n"},"line_number":11,"absolute_offset":175,"submatches":[{"match":{"text":"verify_SSL"},"start":54,"end":64}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Plack/lib/Plack/LWPish.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":42844,"human":"0.000043s"},"searches":1,"searches_with_match":1,"bytes_searched":1689,"bytes_printed":415,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Cpandoc/lib/Pod/Cpandoc.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Cpandoc/lib/Pod/Cpandoc.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":52,"absolute_offset":1254,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Cpandoc/lib/Pod/Cpandoc.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":12385,"human":"0.000012s"},"searches":1,"searches_with_match":1,"bytes_searched":6066,"bytes_printed":374,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Minicpandoc/Pod-Minicpandoc-0.16/Pod-Minicpandoc-0.16/lib/Pod/Minicpandoc.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Minicpandoc/Pod-Minicpandoc-0.16/Pod-Minicpandoc-0.16/lib/Pod/Minicpandoc.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":57,"absolute_offset":1346,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Minicpandoc/Pod-Minicpandoc-0.16/Pod-Minicpandoc-0.16/lib/Pod/Minicpandoc.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":131239,"human":"0.000131s"},"searches":1,"searches_with_match":1,"bytes_searched":10614,"bytes_printed":474,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Minicpandoc/lib/Pod/Minicpandoc.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Minicpandoc/lib/Pod/Minicpandoc.pm"},"lines":{"text":"        verify_SSL => 1,\n"},"line_number":57,"absolute_offset":1346,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Pod-Minicpandoc/lib/Pod/Minicpandoc.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":116649,"human":"0.000117s"},"searches":1,"searches_with_match":1,"bytes_searched":10614,"bytes_printed":390,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Protocol-ACME/lib/Protocol/ACME.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Protocol-ACME/lib/Protocol/ACME.pm"},"lines":{"text":"    $self->{ua} = HTTP::Tiny->new( agent => $USERAGENT, verify_SSL => 1 );\n"},"line_number":369,"absolute_offset":10636,"submatches":[{"match":{"text":"verify_SSL"},"start":56,"end":66}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/P/Protocol-ACME/lib/Protocol/ACME.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":188657,"human":"0.000189s"},"searches":1,"searches_with_match":1,"bytes_searched":32540,"bytes_printed":435,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/SMS-Send-Retarus/lib/SMS/Send/Retarus.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/SMS-Send-Retarus/lib/SMS/Send/Retarus.pm"},"lines":{"text":"        verify_ssl => 1,\n"},"line_number":44,"absolute_offset":940,"submatches":[{"match":{"text":"verify_ssl"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/SMS-Send-Retarus/lib/SMS/Send/Retarus.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":104994,"human":"0.000105s"},"searches":1,"searches_with_match":1,"bytes_searched":5221,"bytes_printed":393,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/SMS-Send-WebSMS/lib/SMS/Send/WebSMS.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/SMS-Send-WebSMS/lib/SMS/Send/WebSMS.pm"},"lines":{"text":"        verify_ssl => 1,\n"},"line_number":37,"absolute_offset":803,"submatches":[{"match":{"text":"verify_ssl"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/SMS-Send-WebSMS/lib/SMS/Send/WebSMS.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":40673,"human":"0.000041s"},"searches":1,"searches_with_match":1,"bytes_searched":3618,"bytes_printed":389,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/Search-Elasticsearch/lib/Search/Elasticsearch/Cxn/HTTPTiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/Search-Elasticsearch/lib/Search/Elasticsearch/Cxn/HTTPTiny.pm"},"lines":{"text":"            $args{verify_ssl} = 1;\n"},"line_number":82,"absolute_offset":2905,"submatches":[{"match":{"text":"verify_ssl"},"start":18,"end":28}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/S/Search-Elasticsearch/lib/Search/Elasticsearch/Cxn/HTTPTiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":132546,"human":"0.000133s"},"searches":1,"searches_with_match":1,"bytes_searched":8482,"bytes_printed":447,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-BetfairNG/lib/WWW/BetfairNG.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-BetfairNG/lib/WWW/BetfairNG.pm"},"lines":{"text":"\t\t     verify_SSL      => 1,\n"},"line_number":1425,"absolute_offset":44257,"submatches":[{"match":{"text":"verify_SSL"},"start":7,"end":17}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-BetfairNG/lib/WWW/BetfairNG.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":392642,"human":"0.000393s"},"searches":1,"searches_with_match":1,"bytes_searched":103468,"bytes_printed":391,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Foreman-API/lib/WWW/Foreman/API.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Foreman-API/lib/WWW/Foreman/API.pm"},"lines":{"text":"        verify_ssl => $params{verify_ssl}\n"},"line_number":22,"absolute_offset":466,"submatches":[{"match":{"text":"verify_ssl"},"start":8,"end":18},{"match":{"text":"verify_ssl"},"start":30,"end":40}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Foreman-API/lib/WWW/Foreman/API.pm"},"lines":{"text":"    if($self->{verify_ssl} == 0) {\n"},"line_number":82,"absolute_offset":2301,"submatches":[{"match":{"text":"verify_ssl"},"start":15,"end":25}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Foreman-API/lib/WWW/Foreman/API.pm"},"lines":{"text":"        verify_ssl => 1\n"},"line_number":115,"absolute_offset":3090,"submatches":[{"match":{"text":"verify_ssl"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Foreman-API/lib/WWW/Foreman/API.pm"},"lines":{"text":"        verify_ssl => 1\n"},"line_number":137,"absolute_offset":3534,"submatches":[{"match":{"text":"verify_ssl"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Foreman-API/lib/WWW/Foreman/API.pm"},"lines":{"text":"=item verify_ssl\n"},"line_number":156,"absolute_offset":3774,"submatches":[{"match":{"text":"verify_ssl"},"start":6,"end":16}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Foreman-API/lib/WWW/Foreman/API.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":112979,"human":"0.000113s"},"searches":1,"searches_with_match":1,"bytes_searched":6345,"bytes_printed":1546,"matched_lines":5,"matches":6}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-SEOGears/lib/WWW/SEOGears.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-SEOGears/lib/WWW/SEOGears.pm"},"lines":{"text":"\t              Example value: { 'agent' => 'WWW-SEOGears', 'timeout' => 20, 'verify_SSL' => 0, 'SSL_options' => {'SSL_verify_mode' => 0x00} }\n"},"line_number":70,"absolute_offset":1550,"submatches":[{"match":{"text":"verify_SSL"},"start":77,"end":87}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-SEOGears/lib/WWW/SEOGears.pm"},"lines":{"text":"\t\t\t$http_opts->{verify_SSL}  = delete $lwp_opts->{$opt}->{'verify_hostname'} if exists $lwp_opts->{$opt}->{'verify_hostname'};\n"},"line_number":716,"absolute_offset":21020,"submatches":[{"match":{"text":"verify_SSL"},"start":16,"end":26}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-SEOGears/lib/WWW/SEOGears.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":256087,"human":"0.000256s"},"searches":1,"searches_with_match":1,"bytes_searched":24424,"bytes_printed":870,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-SEOGears/t/CommonSubs.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-SEOGears/t/CommonSubs.pm"},"lines":{"text":"\t                                http_opts => { 'agent' => 'WWW-SEOGears', 'timeout' => 20, 'verify_SSL' => 0, 'SSL_options' => {'SSL_verify_mode' => 0x00} }\n"},"line_number":10,"absolute_offset":293,"submatches":[{"match":{"text":"verify_SSL"},"start":93,"end":103}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-SEOGears/t/CommonSubs.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":119296,"human":"0.000119s"},"searches":1,"searches_with_match":1,"bytes_searched":1458,"bytes_printed":505,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Twitch/lib/WWW/Twitch.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Twitch/lib/WWW/Twitch.pm"},"lines":{"text":"    HTTP::Tiny->new( verify_SSL => 1 ),\n"},"line_number":99,"absolute_offset":1892,"submatches":[{"match":{"text":"verify_SSL"},"start":21,"end":31}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Twitch/lib/WWW/Twitch.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":154309,"human":"0.000154s"},"searches":1,"searches_with_match":1,"bytes_searched":7734,"bytes_printed":386,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Weebly/lib/WWW/Weebly.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Weebly/lib/WWW/Weebly.pm"},"lines":{"text":"\t                 Example value: { 'agent' => 'WWW-Weebly', 'timeout' => 20, 'verify_SSL' => 'false', 'SSL_options' => {'SSL_verify_mode' => '0x00'} }\n"},"line_number":70,"absolute_offset":1759,"submatches":[{"match":{"text":"verify_SSL"},"start":78,"end":88}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Weebly/lib/WWW/Weebly.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":227044,"human":"0.000227s"},"searches":1,"searches_with_match":1,"bytes_searched":23246,"bytes_printed":498,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Weebly/t/CommonSubs.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Weebly/t/CommonSubs.pm"},"lines":{"text":"\t\t\thttp_opts     => { 'agent' => 'WWW-Weebly', 'timeout' => 20, 'verify_SSL' => 'false', 'SSL_options' => {'SSL_verify_mode' => '0x00'} },\n"},"line_number":12,"absolute_offset":273,"submatches":[{"match":{"text":"verify_SSL"},"start":65,"end":75}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WWW-Weebly/t/CommonSubs.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":107037,"human":"0.000107s"},"searches":1,"searches_with_match":1,"bytes_searched":440,"bytes_printed":483,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-BitFlyer/lib/WebService/BitFlyer.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-BitFlyer/lib/WebService/BitFlyer.pm"},"lines":{"text":"            verify_SSL => 1,\n"},"line_number":58,"absolute_offset":1122,"submatches":[{"match":{"text":"verify_SSL"},"start":12,"end":22}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-BitFlyer/lib/WebService/BitFlyer.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":141440,"human":"0.000141s"},"searches":1,"searches_with_match":1,"bytes_searched":4127,"bytes_printed":411,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Coincheck/lib/WebService/Coincheck.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Coincheck/lib/WebService/Coincheck.pm"},"lines":{"text":"            verify_SSL => 1,\n"},"line_number":66,"absolute_offset":1251,"submatches":[{"match":{"text":"verify_SSL"},"start":12,"end":22}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Coincheck/lib/WebService/Coincheck.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":109629,"human":"0.000110s"},"searches":1,"searches_with_match":1,"bytes_searched":7169,"bytes_printed":415,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Discord-Webhook/lib/WebService/Discord/Webhook.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Discord-Webhook/lib/WebService/Discord/Webhook.pm"},"lines":{"text":"#   verify_SSL\n"},"line_number":37,"absolute_offset":662,"submatches":[{"match":{"text":"verify_SSL"},"start":4,"end":14}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Discord-Webhook/lib/WebService/Discord/Webhook.pm"},"lines":{"text":"  if ( $params{verify_SSL} ) { $attributes{verify_SSL} = $params{verify_SSL} }\n"},"line_number":74,"absolute_offset":1728,"submatches":[{"match":{"text":"verify_SSL"},"start":15,"end":25},{"match":{"text":"verify_SSL"},"start":43,"end":53},{"match":{"text":"verify_SSL"},"start":65,"end":75}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Discord-Webhook/lib/WebService/Discord/Webhook.pm"},"lines":{"text":"=item * verify_SSL\n"},"line_number":497,"absolute_offset":13671,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Discord-Webhook/lib/WebService/Discord/Webhook.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":222074,"human":"0.000222s"},"searches":1,"searches_with_match":1,"bytes_searched":22212,"bytes_printed":1164,"matched_lines":3,"matches":5}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Scaleway/lib/WebService/Scaleway.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Scaleway/lib/WebService/Scaleway.pm"},"lines":{"text":"\tverify_SSL => 1,\n"},"line_number":16,"absolute_offset":260,"submatches":[{"match":{"text":"verify_SSL"},"start":1,"end":11}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Scaleway/lib/WebService/Scaleway.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":180730,"human":"0.000181s"},"searches":1,"searches_with_match":1,"bytes_searched":18452,"bytes_printed":399,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Strike/lib/WebService/Strike.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Strike/lib/WebService/Strike.pm"},"lines":{"text":"sub _ht { HTTP::Tiny->new(agent => \"WebService-Strike/$VERSION\", verify_SSL => 1) }\n"},"line_number":18,"absolute_offset":381,"submatches":[{"match":{"text":"verify_SSL"},"start":65,"end":75}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Strike/lib/WebService/Strike.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":53676,"human":"0.000054s"},"searches":1,"searches_with_match":1,"bytes_searched":4563,"bytes_printed":459,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Vichan/lib/WebService/Vichan.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Vichan/lib/WebService/Vichan.pm"},"lines":{"text":"\tverify_SSL => 1\n"},"line_number":19,"absolute_offset":319,"submatches":[{"match":{"text":"verify_SSL"},"start":1,"end":11}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/W/WebService-Vichan/lib/WebService/Vichan.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":108983,"human":"0.000109s"},"searches":1,"searches_with_match":1,"bytes_searched":6422,"bytes_printed":390,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/c/cPanel-APIClient/lib/cPanel/APIClient/Transport/HTTPSync.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/c/cPanel-APIClient/lib/cPanel/APIClient/Transport/HTTPSync.pm"},"lines":{"text":"    my $verify_SSL = ('off' ne $self->_parse_tls_verification( \\%opts ) );\n"},"line_number":66,"absolute_offset":1390,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/c/cPanel-APIClient/lib/cPanel/APIClient/Transport/HTTPSync.pm"},"lines":{"text":"    push @ht_args, ( verify_SSL => $verify_SSL );\n"},"line_number":68,"absolute_offset":1466,"submatches":[{"match":{"text":"verify_SSL"},"start":21,"end":31},{"match":{"text":"verify_SSL"},"start":36,"end":46}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/c/cPanel-APIClient/lib/cPanel/APIClient/Transport/HTTPSync.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":45560,"human":"0.000046s"},"searches":1,"searches_with_match":1,"bytes_searched":3922,"bytes_printed":853,"matched_lines":2,"matches":3}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/c/cPanel-PublicAPI/lib/cPanel/PublicAPI.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/c/cPanel-PublicAPI/lib/cPanel/PublicAPI.pm"},"lines":{"text":"        verify_SSL => ( exists $OPTS{'ssl_verify_mode'} ? $OPTS{'ssl_verify_mode'} : 1 ),\n"},"line_number":85,"absolute_offset":2675,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/c/cPanel-PublicAPI/lib/cPanel/PublicAPI.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":213883,"human":"0.000214s"},"searches":1,"searches_with_match":1,"bytes_searched":23652,"bytes_printed":459,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/k/kateb/lib/kateb/Install.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/k/kateb/lib/kateb/Install.pm"},"lines":{"text":"\t\tverify_SSL => 1\n"},"line_number":226,"absolute_offset":5504,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/k/kateb/lib/kateb/Install.pm"},"lines":{"text":"\t\tverify_SSL => 1\n"},"line_number":343,"absolute_offset":8978,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/k/kateb/lib/kateb/Install.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":138985,"human":"0.000139s"},"searches":1,"searches_with_match":1,"bytes_searched":9093,"bytes_printed":617,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"}}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"#pod * C<verify_SSL> — A boolean that indicates whether to validate the SSL\n"},"line_number":43,"absolute_offset":1993,"submatches":[{"match":{"text":"verify_SSL"},"start":9,"end":19}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"#pod See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":63,"absolute_offset":3077,"submatches":[{"match":{"text":"verify_SSL"},"start":43,"end":53}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        SSL_options verify_SSL\n"},"line_number":72,"absolute_offset":3353,"submatches":[{"match":{"text":"verify_SSL"},"start":20,"end":30}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL   => $args{verify_SSL} || $args{verify_ssl} || 0, # no verification by default\n"},"line_number":118,"absolute_offset":4497,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18},{"match":{"text":"verify_SSL"},"start":30,"end":40},{"match":{"text":"verify_ssl"},"start":51,"end":61}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"    if ( ref($self) && ( $self->{verify_SSL} || $self->{SSL_options}{SSL_verify_mode} ) ) {\n"},"line_number":546,"absolute_offset":20836,"submatches":[{"match":{"text":"verify_SSL"},"start":33,"end":43}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"            verify_SSL  => $self->{verify_SSL},\n"},"line_number":549,"absolute_offset":21023,"submatches":[{"match":{"text":"verify_SSL"},"start":12,"end":22},{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL      => $self->{verify_SSL},\n"},"line_number":697,"absolute_offset":25390,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18},{"match":{"text":"verify_SSL"},"start":35,"end":45}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"        verify_SSL       => 0,\n"},"line_number":1058,"absolute_offset":37231,"submatches":[{"match":{"text":"verify_SSL"},"start":8,"end":18}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"    if ($self->{verify_SSL}) {\n"},"line_number":1674,"absolute_offset":55992,"submatches":[{"match":{"text":"verify_SSL"},"start":16,"end":26}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"    # user options override settings from verify_SSL\n"},"line_number":1685,"absolute_offset":56485,"submatches":[{"match":{"text":"verify_SSL"},"start":42,"end":52}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"C<verify_SSL> — A boolean that indicates whether to validate the SSL certificate of an C<https> — connection (default is false)\n"},"line_number":1800,"absolute_offset":59492,"submatches":[{"match":{"text":"verify_SSL"},"start":2,"end":12}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"See L</SSL SUPPORT> for more on the C<verify_SSL> and C<SSL_options> attributes.\n"},"line_number":1823,"absolute_offset":60490,"submatches":[{"match":{"text":"verify_SSL"},"start":38,"end":48}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"verify_SSL\n"},"line_number":2044,"absolute_offset":69118,"submatches":[{"match":{"text":"verify_SSL"},"start":0,"end":10}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"Setting the C<verify_SSL> attribute to a true value will make HTTP::Tiny verify\n"},"line_number":2084,"absolute_offset":70455,"submatches":[{"match":{"text":"verify_SSL"},"start":14,"end":24}]}}
{"type":"match","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"lines":{"text":"An error will be occur if C<verify_SSL> is true and no CA certificate file\n"},"line_number":2120,"absolute_offset":71673,"submatches":[{"match":{"text":"verify_SSL"},"start":28,"end":38}]}}
{"type":"end","data":{"path":{"text":"./metacpan-cpan-extracted/distros/p/perl/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":61867,"human":"0.000062s"},"searches":1,"searches_with_match":1,"bytes_searched":80002,"bytes_printed":5000,"matched_lines":15,"matches":19}}}
{"data":{"elapsed_total":{"human":"46.789390s","nanos":789390335,"secs":46},"stats":{"bytes_printed":90302,"bytes_searched":2360105,"elapsed":{"human":"0.012225s","nanos":12224970,"secs":0},"matched_lines":169,"matches":209,"searches":75,"searches_with_match":75}},"type":"summary"}
